require 'fileutils'

plugin :database

File.write('.kaiser.dockerfile', File.read('Dockerfile').sub('--without development test', '') + "\nRUN rm /app/bin/spring")
dockerfile '.kaiser.dockerfile'
FileUtils.rm '.kaiser.dockerfile'

def_db postgres: { version: 'alpine', root_password: 'example' }

vault_app_name = ENV['VAULT_APP_NAME'] || 'vault'
vault_host = ENV['VAULT_HOST'] || "http://vault-app"
vault_port = ENV['VAULT_PORT'] || '8211'

app_params "
  --platform linux/amd64
  -e RAILS_ENV=development
  -e DATABASE_URL=postgres://postgres:example@<%= db_container_name %>:5432
  -e ENCRYPTION_KEY=abcdefghijklmn
  -e GITHUB_ORGANIZATION='degica'
  -e GITHUB_DEVELOPER_TEAM=''
  -e GITHUB_ADMIN_TEAM='developers'
  -e VAULT_URL=#{vault_host}:#{vault_port}
  -e VAULT_PATH_PREFIX=degica
"

attach_mount '.rspec', '/app/.rspec'
attach_mount 'bin', '/app/bin'
attach_mount 'app', '/app/app'
attach_mount 'config', '/app/config'
attach_mount 'db', '/app/db'
attach_mount 'dockerfiles', '/app/dockerfiles'
attach_mount 'lib', '/app/lib'
attach_mount 'spec', '/app/spec'
attach_mount 'Gemfile', '/app/Gemfile'
attach_mount 'Gemfile.lock', '/app/Gemfile.lock'

expose '3000'
db_reset_command 'sh -c "rails db:setup"'
